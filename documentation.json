{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-911a66c7fcf110fde95eb85dd7d1d89506492f6b5dbbb0f63168f891aed48b67d014a81292fbf5eefb52edf2974a25319dd0ede17707dbaf38271a69e91dde13",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "template": "<my-tabs></my-tabs>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `<my-tabs></my-tabs>`\r\n})\r\nexport class AppComponent {\r\n  \r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "NavComponent",
            "id": "component-NavComponent-34208076958d111408a8079084973a33dd48c62ddca50481046befdf895da36b02bb08d1e50571ad67818f15a8e3f1ad7f737d3e7c8a93068e3943277f75c7dc",
            "file": "src/app/components/nav.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "my-nav",
            "styleUrls": [],
            "styles": [
                "\n      .nav span {\n        text-decoration: none;\n        width: auto;\n        background-color: #053742;\n        color: #e8f0f2;\n        padding: 5px;\n        border: 1px solid #CCCCCC;\n        border-radius: 8px;\n      }\n\n      .nav span:hover {\n        color: #008080;\n        cursor: pointer;\n      }\n  \n    "
            ],
            "template": "<div class=\"nav\">\n  <span\n    (click)=\"select(title)\"\n  >\n    {{ title }}\n  </span>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "selected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onSelection",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'my-nav',\r\n  template: `\r\n  <div class=\"nav\">\r\n    <span\r\n      (click)=\"select(title)\"\r\n    >\r\n      {{ title }}\r\n    </span>\r\n  </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .nav span {\r\n        text-decoration: none;\r\n        width: auto;\r\n        background-color: #053742;\r\n        color: #e8f0f2;\r\n        padding: 5px;\r\n        border: 1px solid #CCCCCC;\r\n        border-radius: 8px;\r\n      }\r\n\r\n      .nav span:hover {\r\n        color: #008080;\r\n        cursor: pointer;\r\n      }\r\n  \r\n    `,\r\n  ],\r\n})\r\nexport class NavComponent {\r\n  @Input('title') title?: string = '';\r\n  @Input('selected') selected?: boolean = false;\r\n\r\n  @Output('onSelection') onSelection = new EventEmitter<string>();\r\n\r\n  select(title?: string) {\r\n    this.onSelection.emit(title);\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      .nav span {\n        text-decoration: none;\n        width: auto;\n        background-color: #053742;\n        color: #e8f0f2;\n        padding: 5px;\n        border: 1px solid #CCCCCC;\n        border-radius: 8px;\n      }\n\n      .nav span:hover {\n        color: #008080;\n        cursor: pointer;\n      }\n  \n    \n"
        },
        {
            "name": "TabComponent",
            "id": "component-TabComponent-861ff5cbe33469d6dc0a05d9a37b3fa9a947a0ebba0234bc7fa97d78c94432f10464fa53b7c0ad7b100d51a4d023e5b47fa859d505d485f03c7e8111b579a548",
            "file": "src/app/components/tab.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "my-tab",
            "styleUrls": [],
            "styles": [
                "\n    .tab {\n      width: 30%;\n      height: auto;\n      min-height: 400px;\n      background: #053742;\n      padding: 2rem 1rem;\n      color: #e8f0f2;\n      border-radius: 2rem;\n    }\n    "
            ],
            "template": "<p class=\"tab\">\n  {{ statement }}\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "statement",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'my-tab',\r\n  template: `\r\n    <p class=\"tab\">\r\n      {{ statement }}\r\n    </p>\r\n  `,\r\n  styles: [\r\n    `\r\n    .tab {\r\n      width: 30%;\r\n      height: auto;\r\n      min-height: 400px;\r\n      background: #053742;\r\n      padding: 2rem 1rem;\r\n      color: #e8f0f2;\r\n      border-radius: 2rem;\r\n    }\r\n    `,\r\n  ],\r\n})\r\nexport class TabComponent {\r\n  @Input('statement') statement?: string = '';\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    .tab {\n      width: 30%;\n      height: auto;\n      min-height: 400px;\n      background: #053742;\n      padding: 2rem 1rem;\n      color: #e8f0f2;\n      border-radius: 2rem;\n    }\n    \n"
        },
        {
            "name": "TabsComponent",
            "id": "component-TabsComponent-5da8ca3eca2f4c71bae94a9f2e9a505b4b5add6b718c6da53ea2dd1c1cf8f84028a10899d3d8aa7a7526755a7fa6c6bf256afd461560127e2c59b4ef6bfb7a12",
            "file": "src/app/components/tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "my-tabs",
            "styleUrls": [],
            "styles": [
                "\n\n\n    .my-nav {\n      display: inline-block;\n      margin: 10px;\n    }\n    "
            ],
            "template": "<div class=\"tabs\">\n    <my-nav\n      class=\"my-nav\"\n      *ngFor=\"let tab of tabs; let i = index\"\n      [title]=\"tab?.title\"\n      [selected]=\"selectedTab?.title === tab?.title\"\n      (onSelection)=\"select($event)\"\n    ></my-nav>\n  <my-tab\n    [statement]=\"selectedTab?.statement\"\n  >\n  </my-tab>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "tabs",
                    "defaultValue": "[\r\n    {\r\n      title: 'Tab 1 title',\r\n      statement: 'Tab 1 content',\r\n    },\r\n    {\r\n      title: 'Tab 2 title',\r\n      statement: 'Tab 2 content',\r\n    },\r\n    {\r\n      title: 'Tab 3 title',\r\n      statement: 'Tab 3 content',\r\n    },\r\n    {\r\n      title: 'Tab 4 title',\r\n      statement: 'Tab 4 content',\r\n    },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "literal type[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "selectedTab",
                    "defaultValue": "this.tabs[0]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 51
                }
            ],
            "methodsClass": [
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'my-tabs',\r\n  template: `\r\n    <div class=\"tabs\">\r\n        <my-nav\r\n          class=\"my-nav\"\r\n          *ngFor=\"let tab of tabs; let i = index\"\r\n          [title]=\"tab?.title\"\r\n          [selected]=\"selectedTab?.title === tab?.title\"\r\n          (onSelection)=\"select($event)\"\r\n        ></my-nav>\r\n      <my-tab\r\n        [statement]=\"selectedTab?.statement\"\r\n      >\r\n      </my-tab>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n\r\n\r\n    .my-nav {\r\n      display: inline-block;\r\n      margin: 10px;\r\n    }\r\n    `,\r\n  ],\r\n})\r\nexport class TabsComponent {\r\n  @Input('tabs') tabs: {title: string, statement: string}[] = [\r\n    {\r\n      title: 'Tab 1 title',\r\n      statement: 'Tab 1 content',\r\n    },\r\n    {\r\n      title: 'Tab 2 title',\r\n      statement: 'Tab 2 content',\r\n    },\r\n    {\r\n      title: 'Tab 3 title',\r\n      statement: 'Tab 3 content',\r\n    },\r\n    {\r\n      title: 'Tab 4 title',\r\n      statement: 'Tab 4 content',\r\n    },\r\n  ];\r\n    \r\n  selectedTab?: {title: string, statement: string} = this.tabs[0];\r\n\r\n  select(title: string) {\r\n    const newSelectedTab = this.tabs.find((tab) => title === tab.title);\r\n    this.selectedTab = newSelectedTab;\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n\n\n    .my-nav {\n      display: inline-block;\n      margin: 10px;\n    }\n    \n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-21ad8ad7c4f1563cdca2ca4a336988b8fbe92aeaf06d6e9139983cecb3c752b7c87e7980203505f3e1c086ac4893fe1b7878ba3e6c0ec17c515488f5dc4c89b3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core'\r\nimport { BrowserModule } from '@angular/platform-browser'\r\n\r\nimport { AppComponent } from './app.component'\r\nimport { NavComponent } from './components/nav.component'\r\nimport { TabComponent } from './components/tab.component'\r\nimport { TabsComponent } from './components/tabs.component'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TabComponent,\r\n    TabsComponent,\r\n    NavComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "NavComponent"
                        },
                        {
                            "name": "TabComponent"
                        },
                        {
                            "name": "TabsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tab.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FirstStory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Nav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tab.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props:args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props:args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Nav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props:args,\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "src/stories/Tab.stories.ts": [
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tab.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tab.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props:args,\r\n})"
                }
            ],
            "src/stories/Tabs.stories.ts": [
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props:args,\r\n})"
                }
            ],
            "src/stories/Nav.stories.ts": [
                {
                    "name": "FirstStory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Nav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Nav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props:args,\r\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/nav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Nav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Nav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tab.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tab.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FirstStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}